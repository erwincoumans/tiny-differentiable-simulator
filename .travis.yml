language: cpp
dist: bionic
osx_image: xcode11.3

matrix:
  include:
    - os: linux
      compiler: gcc
      env:
        - BUILD_NAME=TRUSTY_GCC
        - SUDO=sudo
    - os: linux
      compiler: clang
      env:
        - BUILD_NAME=TRUSTY_CLANG
        - SUDO=sudo
    - os: osx
      compiler: gcc
      env:
        - BUILD_NAME=OSX_GCC
    - os: osx
      compiler: clang
      env:
        - COMPILER=clang++
        - BUILD_NAME=OSX_CLANG
addons:
      apt:
        sources:
         - sourceline: 'deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-10 main'
              key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
         - sourceline: 'ppa:ubuntu-toolchain-r/test'
        packages:
          - python3
          - clang-10
          - cmake
          - gcc-9
          - g++-9


install:
   # The following Homebrew packages aren't linked by default, and need to be
   # prepended to the path explicitly.
   - if [ "$TRAVIS_OS_NAME" = "osx" ]; then
      export PATH="$(brew --prefix llvm)/bin:$PATH";
     fi
   # /usr/bin/gcc points to an older compiler on both Linux and macOS.
   - if [ "$CXX" = "g++" ]; then export CXX="g++-9" CC="gcc-9"; fi
   # /usr/bin/clang points to an older compiler on both Linux and macOS.
   #
   # Homebrew's llvm package doesn't ship a versioned clang++ binary, so the values
   # below don't work on macOS. Fortunately, the path change above makes the
   # default values (clang and clang++) resolve to the correct compiler on macOS.
   - if [ "$TRAVIS_OS_NAME" = "linux" ]; then
       if [ "$CXX" = "clang++" ]; then export CXX="clang++-10" CC="clang-10"; fi;
     fi
   - echo ${CC}
   - echo ${CXX}
   - ${CXX} --version
   - cmake --version

script:
  - echo "CXX="$CXX
  - echo "CC="$CC
  - cmake . 
  - make -j8
  - ctest -j8 --output-on-failure
  - sudo make install

