/* --------------------------------------------------------------------------
CppAD: C++ Algorithmic Differentiation: Copyright (C) 2003-20 Bradley M. Bell

  CppAD is distributed under the terms of the
               Eclipse Public License Version 2.0.

  This Source Code may also be made available under the following
  Secondary License when the conditions for such availability set forth
  in the Eclipse Public License, Version 2.0 are satisfied:
        GNU General Public License, Version 2.0 or later.
-------------------------------------------------------------------------- */

$begin whats_new_20$$
$spell
    CppAD
    vec
    ind
    omh
    Cppadcg
    optionlist
    Adolc
    Gitlab
    Github
    op
    optimizer
    cmake
    cppad
    hpp
    ipopt
    uninitialized
    autotools
    callgrind
    ar
    msys
    Microsoft
$$

$section Changes and Additions to CppAD During 2020$$

$head 10-26$$
Improve the documentation for building the CppAD tests using
$cref/Visual Studio/cmake/CMake Command/Visual Studio/$$.

$head 10-23$$
Version $code cmake-3.19$$ of cmake had an change that was not backward
compatible; see
$href%https://discourse.cmake.org/t/on-windows-check-cxx-source-runs-is-calling-check-source-runs/2065/6%
    CHECK_CXX_SOURCE_RUNS
%$$.
This broke the CppAD install and was fixed.
Thus versions of CppAD before 20201023 do not work with version of CMake
at or after 3.18.

$head 10-22$$
Add $code ar-lib$$ to github repository distribution.
This fixes a problem with autotools build when using the
Microsoft C++ compiler and $code msys2$$.

$head 10-21$$
Modify the source file $code match_op.hpp$$ to avoid a
possibly un-initialized warning on some compilers.

$head 10-20$$
The $icode have_ar$$ variable has been removed from the
$cref autotools$$ configuration and the configuration now exits
if $code AM_PROG_AR$$ does not find an archiving tool.
This was done to try and solve some configuration problems with
a combination of $code msys2$$ and the Visual Studio compiler.

$head 10-17$$
$list number$$
The $cref autotools$$ configuration would fail when it tried
to compile a $cref/cppadcg/cppadcg_prefix/$$ include file.
(the autotools configuration does not support $code cppadcg$$).
This has been fixed.
$lnext
The autotools configuration for he profiling version of the
speed tests was out of date. It is sufficient to do speed
profiling using the cmake configuration, so it has
been removed from the autotools configuration.
$lnext
Add more documentation for the
$cref/cppad_profile_flag/cmake/cppad_profile_flag/$$
and fix some problems building the
$code speed_profile$$ program.
(We also use $code callgrind$$ to do CppAD speed profiling.)
$lend

$head 09-05$$
Fix some errors and warnings when building with Visual Studio 2019; e.g. see
$href%https://github.com/coin-or/CppAD/issues/60%issue 60%$$.

$head 06-08$$
Fix compiler warning in $code match_op.hpp$$ about
possibly uninitialized variable.

$head 06-04$$
$list number$$
Advance $cref get_ipopt.sh$$ to ipopt-3.13.2.
$lnext
Fix some compiler warnings generated by g++-10.1.1.
$lend


$head 05-27$$
If $cref ipopt_prefix$$ is specified on the cmake command line,
$cref ipopt_solve$$ is automatically included by $code cppad/cppad.hpp$$.
The $cref sparse2eigen$$ utility can still be used even
if $cref eigen_prefix$$ is not specified on the cmake command line.


$head 05-26$$
$list number$$
There was a bug in conditional expressions when the
$cref/left/condexp/left/$$ or $cref/right/condexp/right/$$ argument is a
$cref/dynamic/con_dyn_var/Dynamic/$$ parameter and the other
is a parameter and $code NDEBUG$$ is not defined.
There was a mistaken assertion that has been fixed.
$lnext
Advance most recent release from 20200000.2 to 20200000.3.
$lend

$head 05-23$$
$list number$$
The $code optimize$$ hash coding used to remove identical expressions
was improved. The can make a big difference for very large programs.
$lnext
The $cref/collision_limit/optimize/options/collision_limit=value/$$
option was added to the $code optimize$$ command.
$lnext
The $cref/exceed_collision_limit/optimize/exceed_collision_limit/$$
function was added so one can check if a larger collision limit
might make a difference.
$lend

$head 05-01$$
$list number$$
A problem was fixed in the $cref get_adolc.sh$$
installation of the optional package Adolc .
To be specific, to be specific the Adolc source moved from Gitlab to Github.
In addition, advance to Adolc master on 2020-04-01.
$lnext
The
$cref/no_cumulative_sum_op/optimize/options/no_cumulative_sum_op/$$
option was added to the $code optimize$$ routine because,
in some cases, gathering cumulative summations
interferes with recognizes pieces of summations that are
the same in different cumulative sums.
$lend

$head 03-11$$
The $code CppAD::vector$$ constructor was extended to allow its
$cref/size/CppAD_vector/Integer Size/$$ to be a $code int$$
(this used to generate a warning when using the $code clang$$ compiler).

$head 02-02$$
The $code get_optional.sh$$ prefix was extended so that it could be a
$cref/relative path/get_optional.sh/prefix/Relative Path/$$.
In addition
$cref/configuration/get_optional.sh/prefix/Configuration/$$
instructions were added to cover the case where the prefix is changed.

$head 02-01$$
The $cref/get_optional.log/get_optional.sh/get_optional.log/$$
and $cref/get_optional.err/get_optional.sh/get_optional.err/$$ files
were added so one can see the progress of the $code get_optional.sh$$ script.

$head 01-29$$
$list number$$
Add the $cref cppadcg_sparse_jacobian.cpp$$ speed test.
$lnext
The speed main program
$cref/correct/speed_main/test/correct/$$
test results were printed as
$codei%
    %package%_%test%_%optionlist%_ok = %result%
%$$
This has been changed to
$codei%
    %package%_%test%_%optionlist%_correct = %result%
%$$
$lend

$head 01-24$$
$list number$$
Add the $cref cppadcg_det_minor.cpp$$ speed test.
This is the first test using
$cref/Cppadcg/cppadcg_prefix/Cppadcg Home Page/$$
(this package generates C source code for the derivatives).
$lnext
The package name was removed from the speed test size output
(because the sizes do not depend on the package); see
$cref/speed results/speed_main/Speed Results/$$.
$lend

$head 01-22$$
$list number$$
Add a $cref json_get_started.cpp$$ example.
$lnext
Move the section $cref example_abs_normal$$ below
the section $cref abs_normal_fun$$.
$lend

$head 01-18$$
Modify the option package install scripts so they all use the same
install $cref/prefix/get_optional.sh/prefix/$$
that the user can change in the file $code bin/get_optional.sh$$.
In addition, these scripts were updated to use more recent versions
of the optional packages.

$head 01-17$$
Create an example / template for adding a new package to the speed tests;
see $cref speed_xpackage$$.

$head 01-12$$
Documentation was added for the
$cref/special requirements/base_ordered/Special Requirements/$$
when the $icode Base$$ type does not support ordered comparison.
As a consequence, the reverse mode the derivative of $codei%pow(%x%, %y%)%$$
may result in zero (not nan) when $icode x$$ is zero; see the
$cref/reverse mode/wish_list/Reverse Mode/$$ wish list item.

$head 01-06$$
The $code VecAD$$ objects have been extended to work with
dynamic parameters. However, this is not as efficient as it should be; see
$cref/efficiency/VecAD/Efficiency/$$ and
$cref/VecAD vectors/wish_list/Dynamic Parameters/VecAD Vectors/$$
under dynamic parameters in the wish list.

$head 01-04$$
$list number$$
The $cref VecAD$$ documentation was re-written.
$lnext
An empty directory with the name $code omh$$ was being
install below the include directory.
This has been fixed.
$lend

$end
